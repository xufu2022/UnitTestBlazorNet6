@page "/edit/{Id:int}"
@using BlazorStudentApp.Data.Models
@using BlazorStudentApp.Data.Services
@using Microsoft.AspNetCore.Components.Forms
@inject IStudentsService StudentsService
@inject NavigationManager _navManager

<PageTitle>Edit Student</PageTitle>

<h1>Edit Student</h1>
<hr />

<div class="row">
    <div class="col-md-8 offset-2" style="display:@(isSuccessMessageVisible ? "block" : "none")">
        <div class="alert alert-success" role="alert">
            Student updated successfully
        </div>
    </div>
    <div class="col-md-8 offset-2">
        <EditForm Model="student" OnValidSubmit="@HandleUpdateSubmit">
            <DataAnnotationsValidator />

            <div class="form-group">
                <label for="name">Full name</label>
                <input type="text" class="form-control" id="name" @bind-value="student.Name" placeholder="Enter your full name">
                <ValidationMessage For="() => student.Name" />
            </div>
            <div class="form-group">
                <label for="email">Email address</label>
                <input type="email" class="form-control" id="email" @bind-value="student.Email" placeholder="Enter email">
                <ValidationMessage For="() => student.Email" />
            </div>
            <div class="form-group">
                <label for="phone">Phone</label>
                <input type="text" class="form-control" id="phone" @bind-value="student.Phone" placeholder="Enter your phone number">
                <ValidationMessage For="() => student.Phone" />
            </div>
            <div class="form-group">
                <label for="address">Address</label>
                <input type="text" class="form-control" id="address" @bind-value="student.Address" placeholder="Enter your address">
                <ValidationMessage For="() => student.Address" />
            </div>
            <button type="submit" class="btn btn-default" @onclick="@Back">Back</button>
            <button type="submit" class="btn btn-primary">Update</button>
        </EditForm>
    </div>
</div>

@code {

    [Parameter]
    public int Id { get; set; }

    private Student student = new();
    private string studentName = "";
    private bool isSuccessMessageVisible = false;

    private async Task HandleUpdateSubmit()
    {
        try
        {
            await StudentsService.UpdateStudentAsync(student);
            isSuccessMessageVisible = true;
        }
        catch
        {

        }
    }

    protected override async Task OnInitializedAsync()
    {
        student = await StudentsService.GetStudentAsync(Id);
    }

    void Back()
    {
        _navManager.NavigateTo("/list", true);
    }
}
